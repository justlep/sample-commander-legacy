html
    head
        meta(charset='UTF-8')
        meta(name='viewport', content='width=device-width, minimum-scale=1.0')
        meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
        link(rel='stylesheet', type='text/css', href='css/uikit.css')
        link(rel='stylesheet', type='text/css', href='css/styles.css')
    body
        header
            include include/player
            include include/filter

            input#sourcePath(type='file', nwdirectory='', data-bind='event: {change: source.onPathChange}')
            input#targetPath(type='file', nwdirectory='', data-bind='event: {change: target.onPathChange}')
        form#filesForm(style="display:none")
            input#editor-executable-file(type='file', data-bind='event: {change: function(){$root.config.saveEditorExecutableFileDialog()}}', style='display:none')
            input#ffmpeg-executable-file(type='file', data-bind='event: {change: function(){$root.config.saveFfmpegExecutableFileDialog()}}', style='display:none')

        .main-columns
            // SOURCE BOX
            .column
                h2.column-headline(data-bind='click: selectSourcePath, event: {contextmenu: onSourceRightclick}')
                    span.leftButton(title='Switch list/table mode', data-bind="click: switchListMode, clickBubble: false") Mode
                    | Source
                    span.filesAndDirStats(data-bind='pathWatcherInfo: source')
                    span.rightButton(title='Refresh', data-bind="click: source.reload, clickBubble: false") Refresh
                    span.path(data-bind='text: source.path')
                .col-content(data-bind="css: {'spinner-round': source.isLoading}, abortLoadingOnClick: source, event: {contextmenu: stopAudio}, click: onSourceListClick")
                    .scrollable-container
                        .aborted(data-bind='visible: source.aborted') aborted
                        .invalid-path(data-bind='visible: source.invalidPath') invalid path
                        ul#sourceList.file-list(data-bind='css: {asFloatingList: config.floatingList, asTable: !config.floatingList(), showFilesize: config.showFilesize, showCDate: config.showCDate}, click: onSourceFileClicked, event: {contextmenu: onSourceFileRightClicked}, clickBubble: false, fastForEach: source.files')
                            li.file(draggable='true', dropzone='copy', data-bind="filteredFile: {hiddenIds1: $root.hiddenFileIdsByFilter, hiddenIds2: $root.hiddenFileIdsByDuplicateFilter}, attr: {'data-id': id, title: $root.config.filePathTooltip() && path}, css: {file: true, playing: ($root.filePlaying() && $data.id === $root.filePlaying().id)}")
                                span.filename(data-bind='text: filename')
                                span.filesize(data-bind='text: formattedFilesize')
                                span.cdate(data-bind='text: formattedCDate')
                                img.spectro(data-bind="attr: {src: spectrogram() || ''}, visible: spectrogram")
            // /SOURCE BOX
            // TARGET BOX
            .column(data-bind="visible: config.showTargetColumn")
                h2.column-headline(data-bind='click: selectTargetPath, event: {contextmenu: onTargetRightclick}')
                    | Target
                    span.filesAndDirStats(data-bind='pathWatcherInfo: target')
                    span.rightButton(title='Hide this panel', data-bind="click: function(){$root.config.showTargetColumn(false)}, clickBubble: false") Hide
                    span.leftButton(title='Refresh', data-bind="click: target.reload, clickBubble: false") Refresh
                    span.path(data-bind='text: target.path')
                .col-content(data-bind="css: {'spinner-round': target.isLoading}, abortLoadingOnClick: target")
                    .scrollable-container
                        .aborted(data-bind='visible: target.aborted')
                            | aborted
                            span.maxDirsExceeded(data-bind='visible: target.maxDirsExceeded') limit reached
                        .invalid-path(data-bind='visible: target.invalidPath') invalid path
                        ul#directoryList.dir-list(data-bind='fastForEach: target.directories')
                            li(data-bind="style: {'paddingLeft': 15 * $data.depth + 'px'}")
                                .dir(data-bind='text: $data.name, css: {subdir: $data.depth}, attr: {id: elemId}')
            // /TARGET BOX

        <!-- ko with: source.remainingSpectrogramsToProcess -->
        .remainingSpectrograms.spinner
            span Processing spectrogram...<br> <!-- ko text: $parent.source.currentlyProcessedAudioFilename --><!-- /ko -->
            div(data-bind="text: $data + ' remaining'")
            button.uk-button.uk-button-small.uk-button-danger(data-bind="click: $parent.source.cancelSpectrogramProcessing") Abort after current
        <!-- /ko -->

        footer.footer
            include include/footer
            .column__toggle(title="Show Target Panel", data-bind="visible: !config.showTargetColumn(), click: function(){ $root.config.showTargetColumn(true) }") Target

        include include/modalDialog
        include include/infoDialogTpl
        include include/confirmDialogTpl
        include include/copyMoveFilesDialog
        include include/deleteFilesDialogTpl
        include include/renameFilesDialogTpl
        include include/createSubdirDialogTpl
        include include/renameDirDialogTpl

        script.
            window.require('./js/App').run();
